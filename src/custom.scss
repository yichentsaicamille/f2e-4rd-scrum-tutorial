@use "sass:map";
@import "maps";
/* customize bootstrap style*/

input:focus {
  outline: none;
}

button {
  background: transparent;
  border: none;
  padding: 0px;
}

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "~bootstrap/scss/functions";

// 2. Include any default variable overrides here

// 3. Include remainder of required Bootstrap stylesheets
@import "~bootstrap/scss/variables";

// 4. Include any default map overrides here

// 5. Include remainder of required parts
@import "~bootstrap/scss/maps";
@import "~bootstrap/scss/mixins";
@import "~bootstrap/scss/root";

// 6. Optionally include any other parts as needed
@import "~bootstrap/scss/utilities";
@import "~bootstrap/scss/reboot";
@import "~bootstrap/scss/type";
@import "~bootstrap/scss/images";
@import "~bootstrap/scss/containers";

// grid gutter
$grid-gutter-width: 5rem !default;
$gutters: (
  0: 0,
  1: $spacer * 0.25,
  2: $spacer * 0.5,
  3: $spacer * 0.75,
  4: $spacer * 1,
  5: $spacer * 1.25,
  6: $spacer * 1.5,
);

@import "~bootstrap/scss/grid";
@import "~bootstrap/scss/helpers";

// container padding ---
@mixin make-container(
  $padding-x: $container-padding-x,
  $multiple: 0.833333335
) {
  width: 100%;
  padding-right: $padding-x * $multiple;
  padding-left: $padding-x * $multiple;
  margin-right: auto;
  margin-left: auto;
}

.container {
  @include make-container();
}

// font size ---
$font-size-base: 1rem;

$line-height-base: 1.25;
$line-height-sm: 1;
$line-height-lg: 1.4;

$h1-font-size: $font-size-base * 2.5; // 40
$h2-font-size: $font-size-base * 2; // 32
$h3-font-size: $font-size-base * 1.75; // 28
$h4-font-size: $font-size-base * 1.5; // 24
$h5-font-size: $font-size-base * 1.25; // 20
$h6-font-size: $font-size-base * 1.125; // 18
$t-font-size: $font-size-base; // 16
$st-font-size: $font-size-base * 0.875; // 14
$bd1-font-size: $font-size-base; // 16
$bd2-font-size: $font-size-base * 0.875; // 14
$cp1-font-size: $font-size-base * 0.75; // 12
$cp2-font-size: $font-size-base * 0.75; // 12

$font-sizes: (
  1: $h1-font-size,
  2: $h2-font-size,
  3: $h3-font-size,
  4: $h4-font-size,
  5: $h5-font-size,
  6: $h6-font-size,
  t: $t-font-size,
  st: $st-font-size,
  bd1: $bd1-font-size,
  bd2: $bd1-font-size,
  cp1: $cp1-font-size,
  cp2: $cp2-font-size,
);

$utilities: map-merge(
  $utilities,
  (
    "font-size": (
      rfs: true,
      property: font-size,
      class: fs,
      values: $font-sizes,
    ),
  )
);

$font-family-noto-sans: "Noto Sans";

$font: (
  1: $font-weight-bold
    (
      $h1-font-size,
    ) / $line-height-base $font-family-noto-sans,
  2: $font-weight-bold
    (
      $h2-font-size,
    ) / $line-height-base $font-family-noto-sans,
  3: $font-weight-bold
    (
      $h3-font-size,
    ) / $line-height-base $font-family-noto-sans,
  4: $font-weight-bold
    (
      $h4-font-size,
    ) / $line-height-lg $font-family-noto-sans,
  5: $font-weight-bold
    (
      $h5-font-size,
    ) / $line-height-lg $font-family-noto-sans,
  6: $font-weight-bold
    (
      $h6-font-size,
    ) / $line-height-lg $font-family-noto-sans,
  t: $font-weight-bold
    (
      $t-font-size,
    ) / $line-height-lg $font-family-noto-sans,
  st: $font-weight-bold
    (
      $st-font-size,
    ) / $line-height-lg $font-family-noto-sans,
  bd1: $font-weight-normal
    (
      $bd1-font-size,
    ) / $line-height-lg $font-family-noto-sans,
  bd2: $font-weight-normal
    (
      $bd2-font-size,
    ) / $line-height-lg $font-family-noto-sans,
  cp1: $font-weight-bold
    (
      $cp1-font-size,
    ) / $line-height-lg $font-family-noto-sans,
  cp2: $font-weight-normal
    (
      $cp2-font-size,
    ) / $line-height-lg $font-family-noto-sans,
);

$utilities: map-merge(
  $utilities,
  (
    "font": (
      property: font,
      class: f,
      responsive: true,
      values: $font,
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "color": (
      property: color,
      class: "text",
      values: $project-colors,
    ),
  )
);

$utilities: map-merge(
  $utilities,
  (
    "background-color": (
      property: background-color,
      class: bg,
      values: $project-colors,
    ),
  )
);

// spacing
$spacer: 1rem;
$spacers: (
  0: 0,
  1: $spacer * 0.25,
  2: $spacer * 0.5,
  2_5: $spacer * 0.625,
  3: $spacer * 0.75,
  3_5: $spacer * 0.875,
  4: $spacer * 1,
  4_5: $spacer * 1.125,
  5: $spacer * 1.25,
  6: $spacer * 1.5,
  7: $spacer * 1.75,
  8: $spacer * 2,
  9: $spacer * 2.25,
  10: $spacer * 2.5,
  10_5: $spacer * 2.625,
  11: $spacer * 2.75,
  12: $spacer * 3,
  13: $spacer * 3.25,
  14: $spacer * 3.5,
  15: $spacer * 3.75,
  16: $spacer * 4,
  20: $spacer * 5,
  22: $spacer * 5.5,
  26: $spacer * 6.5,
  30: $spacer * 7.5,
  32: $spacer * 8,
  34: $spacer * 8.5,
  50: $spacer * 10,
  52: $spacer * 10.5,
  90: $spacer * 17.5,
  100: $spacer * 20,
  108: $spacer * 22,
  110: $spacer * 22.5,
  150: $spacer * 30,
  160: $spacer * 32.5,
  161: $spacer * 32.75,
  162: $spacer * 33,
  163: $spacer * 33.25,
  164: $spacer * 34,
  165: $spacer * 34.25,
  166: $spacer * 34.5,
  167: $spacer * 34.75,
  168: $spacer * 35,
  178: $spacer * 37.5,
);

$percentage: (
  0p: 0%,
  50p: 50%,
  100p: 100%,
);

$utilities: map-merge(
  $utilities,
  (
    "margin": (
      responsive: true,
      property: margin,
      class: m,
      values:
        map-merge(
          $spacers,
          (
            auto: auto,
          )
        ),
    ),
    "margin-x": (
      responsive: true,
      property: margin-right margin-left,
      class: mx,
      values:
        map-merge(
          $spacers,
          (
            auto: auto,
          )
        ),
    ),
    "margin-y": (
      responsive: true,
      property: margin-top margin-bottom,
      class: my,
      values:
        map-merge(
          $spacers,
          (
            auto: auto,
          )
        ),
    ),
    "margin-top": (
      responsive: true,
      property: margin-top,
      class: mt,
      values:
        map-merge(
          $spacers,
          (
            auto: auto,
          )
        ),
    ),
    "margin-end": (
      responsive: true,
      property: margin-right,
      class: me,
      values:
        map-merge(
          $spacers,
          (
            auto: auto,
          )
        ),
    ),
    "margin-bottom": (
      responsive: true,
      property: margin-bottom,
      class: mb,
      values:
        map-merge(
          $spacers,
          (
            auto: auto,
          )
        ),
    ),
    "margin-start": (
      responsive: true,
      property: margin-left,
      class: ms,
      values:
        map-merge(
          $spacers,
          (
            auto: auto,
          )
        ),
    ),
    // Padding utilities
    "padding":
      (
        responsive: true,
        property: padding,
        class: p,
        values: $spacers,
      ),
    "padding-x": (
      responsive: true,
      property: padding-right padding-left,
      class: px,
      values: $spacers,
    ),
    "padding-y": (
      responsive: true,
      property: padding-top padding-bottom,
      class: py,
      values: $spacers,
    ),
    "padding-top": (
      responsive: true,
      property: padding-top,
      class: pt,
      values: $spacers,
    ),
    "padding-end": (
      responsive: true,
      property: padding-right,
      class: pe,
      values: $spacers,
    ),
    "padding-bottom": (
      responsive: true,
      property: padding-bottom,
      class: pb,
      values: $spacers,
    ),
    "padding-start": (
      responsive: true,
      property: padding-left,
      class: ps,
      values: $spacers,
    ),
    // Gap utility
    "gap":
      (
        responsive: true,
        property: gap,
        class: gap,
        values: $spacers,
      ),
  )
);

// sizing
$utilities: map-merge(
  $utilities,
  (
    "width": (
      property: width,
      class: w,
      responsive: true,
      values:
        map-merge(
          map-merge($spacers, $percentage),
          (
            auto: auto,
          )
        ),
    ),
    "max-width": (
      property: max-width,
      class: mw,
      values: (
        100: 100%,
      ),
    ),
    "min-width": (
      property: min-width,
      class: mnw,
      values: (
        100: 100%,
      ),
    ),
    "height": (
      property: height,
      class: h,
      responsive: true,
      values:
        map-merge(
          map-merge($spacers, $percentage),
          (
            auto: auto,
          )
        ),
    ),
    "max-height": (
      property: max-height,
      class: mh,
      responsive: true,
      values:
        map-merge(
          map-merge($spacers, $percentage),
          (
            auto: auto,
          )
        ),
    ),
  )
);

// object-fit
$utilities: map-merge(
  $utilities,
  (
    "object-fit": (
      responsive: true,
      property: object-fit,
      values: (
        contain: contain,
        cover: cover,
        fill: fill,
        scale: scale-down,
        none: none,
      ),
    ),
  )
);

$border: (
  null: var(--#{$prefix}border-width) var(--#{$prefix}border-style)
    map-get($project-colors, "black-core"),
  0: 0,
  1: 1px var(--#{$prefix}border-style) map-get($project-colors, "black-core"),
);

$border-radius: (
  0: 0px,
  1: 1px,
  2: 2px,
  3: 3px,
  4: 4px,
  5: 5px,
  8: 8px,
);

$border-width: (
  0: 0px,
  1: 1px,
  2: 2px,
  3: 3px,
  4: 4px,
  5: 5px,
);

// border
$utilities: map-merge(
  $utilities,
  (
    "border-color": (
      responsive: true,
      property: border-color,
      class: border-color,
      values: $project-colors,
    ),
    "border-style": (
      responsive: true,
      property: border-style,
      class: border-style,
      values: (
        solid: solid,
      ),
    ),
    "border": (
      property: border,
      values: $border,
    ),
    "border-top": (
      property: border-top,
      values: $border,
    ),
    "border-end": (
      property: border-right,
      class: border-end,
      values: $border,
    ),
    "border-bottom": (
      property: border-bottom,
      values: $border,
    ),
    "border-start": (
      property: border-left,
      class: border-start,
      values: $border,
    ),
    "border-radius": (
      property: border-radius,
      class: border-radius,
      values: $border-radius,
    ),
    "border-top-left-radius": (
      property: border-top-left-radius,
      class: border-top-left-radius,
      values: $border-radius,
    ),
    "border-top-right-radius": (
      property: border-top-right-radius,
      class: border-top-right-radius,
      values: $border-radius,
    ),
    "border-bottom-left-radius": (
      property: border-bottom-left-radius,
      class: border-bottom-left-radius,
      values: $border-radius,
    ),
    "border-bottom-right-radius": (
      property: border-bottom-right-radius,
      class: border-bottom-right-radius,
      values: $border-radius,
    ),
    "border-width": (
      property: border-width,
      class: border-width,
      values: $border-width,
    ),
    "border-bottom-width": (
      property: border-bottom-width,
      class: border-bottom-width,
      values: $border-width,
    ),
  )
);

$zIndex: (
  base: 1,
  10: 10,
  100: 100,
  1000: 1000,
  10000: 10000,
);

// z-index
$utilities: map-merge(
  $utilities,
  (
    "z-index": (
      property: z-index,
      class: z-index,
      values: $zIndex,
    ),
  )
);

// cursor
$utilities: map-merge(
  $utilities,
  (
    "cursor": (
      property: cursor,
      values: (
        auto: auto,
        pointer: pointer,
      ),
    ),
  )
);

// background
$utilities: map-merge(
  $utilities,
  (
    "background-position": (
      property: background-position,
      class: bg-position,
      values: (
        center: center,
      ),
    ),
    "background-size": (
      property: background-size,
      class: bg-size,
      values: (
        contain: contain,
        cover: cover,
      ),
    ),
    "background-repeat": (
      property: background-repeat,
      class: bg-repeat,
      values: (
        repeat: repeat,
        none: no-repeat,
      ),
    ),
  )
);

// aspect-ratio
$utilities: map-merge(
  $utilities,
  (
    "aspect-ratio": (
      property: aspect-ratio,
      class: aspect-ratio,
      values: (
        1x1: 1/1,
      ),
    ),
  )
);

// text-overflow
$utilities: map-merge(
  $utilities,
  (
    "text-overflow": (
      property: text-overflow,
      values: (
        ellipsis: ellipsis,
      ),
    ),
  ),
  (
    // TODO: 後續研究如何 utilize webkit 屬性
    //     "-webkit-line-clamp": (
    //         property: -webkit-line-clamp,
    //         class: line-clamp,
    //         values: (
    //             2: 2,
    //             3: 3,
    //         ),
    //     ),
    // ),
    // (
    //     "box-orient": (
    //         property: -webkit-box-orient,
    //         values: (
    //             vertical: vertical,
    //         ),
    //     ),
  )
);

// display
$utilities: map-merge(
  $utilities,
  (
    "display": (
      responsive: true,
      print: true,
      property: display,
      class: d,
      values: (
        inline: inline,
        inline-block: inline-block,
        block: block,
        grid: grid,
        table: table,
        table-row: table-row,
        table-cell: table-cell,
        flex: flex,
        inline-flex: inline-flex,
        none: none,
        webkit-box: -webkit-box,
      ),
    ),
  )
);

// white-space
$utilities: map-merge(
  $utilities,
  (
    "white-space": (
      property: white-space,
      class: white-space,
      values: (
        no-wrap: nowrap,
      ),
    ),
  )
);

// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import "~bootstrap/scss/utilities/api";

// 8. Add additional custom code here
